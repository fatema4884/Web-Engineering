//validatation

function validateForm() {
    const errorDiv = document.getElementById('error-message');
    errorDiv.textContent = ""; 

    const lastname = document.getElementById('lastname').value.trim();
    const firstname = document.getElementById('firstname').value.trim();
    const sid = document.getElementById('sid').value.trim();
    const email = document.getElementById('email').value.trim();

    const nameRegex = /^[A-Za-z\s]+$/;
    const sidRegex = /^\d{3}-\d{2}-\d{4}$/;
    const emailRegex = /^[a-zA-Z0-9._%+-]+\.cse@diu\.edu\.bd$/;

    if (!nameRegex.test(lastname) || !nameRegex.test(firstname)) {
        errorDiv.textContent = "Name and Firstname must contain only letters.";
        return false;
    }
    if (!sidRegex.test(sid)) {
        errorDiv.textContent = "SID must be in the format xxx-xx-xxxx.";
        return false;
    }
    if (!emailRegex.test(email)) {
        errorDiv.textContent = "Email must end with .cse@diu.edu.bd";
        return false;
    }
    return true;
}



//php

<?php
$host = "localhost";
$user = "root";
$pass = "";
$db = "comp207_lab";

$conn = new mysqli($host, $user, $pass, $db);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Get all slots
$slots = $conn->query("SELECT id, name, time FROM slots ORDER BY id");

echo "<h1>Registered Students by Slot</h1>";

while ($slot = $slots->fetch_assoc()) {
    $slot_id = $slot['id'];
    $slot_name = $slot['name'];
    $slot_time = $slot['time'];

    echo "<h2>$slot_name ($slot_time)</h2>";

    $stmt = $conn->prepare("SELECT firstname, lastname, sid, email FROM registrations WHERE slot_id = ? ORDER BY lastname, firstname");
    $stmt->bind_param("i", $slot_id);
    $stmt->execute();
    $result = $stmt->get_result();

    if ($result->num_rows > 0) {
        echo "<table border='1' cellpadding='5' cellspacing='0'>";
        echo "<tr><th>Firstname</th><th>Lastname</th><th>SID</th><th>Email</th></tr>";
        while ($row = $result->fetch_assoc()) {
            echo "<tr>
                <td>{$row['firstname']}</td>
                <td>{$row['lastname']}</td>
                <td>{$row['sid']}</td>
                <td>{$row['email']}</td>
            </tr>";
        }
        echo "</table>";
    } else {
        echo "<p>No students registered for this slot.</p>";
    }
    $stmt->close();
}

$conn->close();
?>

//register .php

<?php
$host = "localhost";
$user = "root";
$pass = ""; 
$db = "comp207_lab";

$conn = new mysqli($host, $user, $pass, $db);
if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

//validation
function validate_input($firstname, $lastname, $sid, $email) {
    if (empty($firstname) || empty($lastname) || empty($sid) || empty($email)) {
        return "All fields are required.";
    }
    if (!preg_match("/^[A-Za-z\s]+$/", $firstname) || !preg_match("/^[A-Za-z\s]+$/", $lastname)) {
        return "Names must contain only letters.";
    }
    if (!preg_match("/^\d{3}-\d{2}-\d{4}$/", $sid)) {
        return "SID must be in the format xxx-xx-xxxx.";
    }
    if (!preg_match("/^[a-zA-Z0-9._%+-]+\.cse@diu\.edu\.bd$/", $email)) {
        return "Email must end with .cse@diu.edu.bd";
    }
    return "";
}

// posting data
$firstname = trim($_POST['firstname'] ?? '');
$lastname = trim($_POST['lastname'] ?? '');
$sid = trim($_POST['sid'] ?? '');
$email = trim($_POST['email'] ?? '');
$slot_id = intval(substr($_POST['slot'] ?? '', 4)); // slot1 -> 1, slot2 -> 2, etc.

$error = validate_input($firstname, $lastname, $sid, $email);

if ($error) {
    echo "<div style='color:red;'>$error</div>";
    exit;
}

// Check if SID is already registered
$stmt = $conn->prepare("SELECT slot_id FROM registrations WHERE sid = ?");
$stmt->bind_param("s", $sid);
$stmt->execute();
$stmt->store_result();
if ($stmt->num_rows > 0) {
    // Already registered, offer to change slot
    $stmt->bind_result($current_slot);
    $stmt->fetch();
    if ($current_slot == $slot_id) {
        echo "<div style='color:red;'>You are already registered for this slot.</div>";
        exit;
    } else {
        // Remove from old slot, add to new slot if seats available
        $stmt->close();
        $result = $conn->query("SELECT seats_remaining FROM slots WHERE id = $slot_id");
        $row = $result->fetch_assoc();
        if ($row['seats_remaining'] <= 0) {
            echo "<div style='color:red;'>Selected slot is full. Please choose another slot.</div>";
            exit;
        }
        // Update registration
        $conn->query("UPDATE slots SET seats_remaining = seats_remaining + 1 WHERE id = $current_slot");
        $conn->query("UPDATE slots SET seats_remaining = seats_remaining - 1 WHERE id = $slot_id");
        $stmt = $conn->prepare("UPDATE registrations SET slot_id = ? WHERE sid = ?");
        $stmt->bind_param("is", $slot_id, $sid);
        $stmt->execute();
        echo "<div style='color:green;'>Registration updated to new slot!</div>";
        exit;
    }
}
$stmt->close();

// available slots
$result = $conn->query("SELECT seats_remaining FROM slots WHERE id = $slot_id");
if (!$result || $result->num_rows == 0) {
    echo "<div style='color:red;'>Invalid slot selected.</div>";
    exit;
}
$row = $result->fetch_assoc();
if ($row['seats_remaining'] <= 0) {
    echo "<div style='color:red;'>Selected slot is full. Please choose another slot.</div>";
    exit;
}

// inserting student data
$stmt = $conn->prepare("INSERT INTO registrations (firstname, lastname, sid, email, slot_id) VALUES (?, ?, ?, ?, ?)");
$stmt->bind_param("ssssi", $firstname, $lastname, $sid, $email, $slot_id);
if ($stmt->execute()) {
    // counting remaining seats
    $conn->query("UPDATE slots SET seats_remaining = seats_remaining - 1 WHERE id = $slot_id");
    echo "<div style='color:green;'>Registration successful!</div>";
} else {
    echo "<div style='color:red;'>Registration failed. Please try again.</div>";
}
$stmt->close();
$conn->close();
?>
